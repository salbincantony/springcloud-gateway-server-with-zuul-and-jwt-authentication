server.port=8085
#Name of the application
spring.application.name=gateway

## PostgreSQL
# JDBC URL of the database.
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
# Login username of the database.
spring.datasource.username=postgres
# Login password of the database.
spring.datasource.password=admin
# Whether to enable logging of SQL statements.
spring.jpa.show-sql=true
# DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. 
# Defaults to "create-drop" when using an embedded database and no schema manager was detected.
# Otherwise, defaults to "none".
spring.jpa.hibernate.ddl-auto=update
# Fix Postgres JPA Error (Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented).
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

#Register url for client
eureka.client.service-url.defaultZone=http://localhost:8761/eureka



#All url come with prefix/api will interpret
zuul.prefix=/api

zuul.routes.cart.path=/cart/**
#zuul.routes.cart.url=http://localhost:8085/
zuul.routes.cart.serviceId=CART-SERVICE

zuul.routes.catalog.path=/catalog/**
zuul.routes.catalog.serviceId=CATALOG-SERVICE

zuul.routes.order.path=/order/**
zuul.routes.order.serviceId=ORDER-SERVICE



#zuul.routes.orderservice.path=/orders/**
#zuul.routes.orderservice.serviceId=order-service

